--- # Test 1: Should warn on standalone single-entry allOf
openapi: 3.0.0
info:
  title: Test API
x-tools-validator:
  id: no-singular-allof-1
  spectral:
    should-hit:
      - no-singular-allof
  zgw-cleaner:
    should-clean-to: no-singular-allof-1-cleaned
    should-equal:
      - no-singular-allof
components:
  schemas:
    Test:
      allOf:
        - $ref: "#/components/schemas/BaseType"
--- # Test 1-cleaned: Should not warn on a cleaned version of test-1
openapi: 3.0.0
info:
  title: Test API
x-tools-validator:
  id: no-singular-allof-1-cleaned
  spectral:
    should-miss:
      - no-singular-allof
  zgw-cleaner:
    should-clean-to: no-singular-allof-1-cleaned
components:
  schemas:
    Test:
      $ref: "#/components/schemas/BaseType"

--- # Test 2: Should NOT warn when single-entry allOf has siblings
openapi: 3.0.0
info:
  title: Test API
x-tools-validator:
  id: no-singular-allof-2
  spectral:
    should-miss:
      - no-singular-allof
  zgw-cleaner:
    should-clean-to: no-singular-allof-2
components:
  schemas:
    Test:
      allOf:
        - $ref: "#/components/schemas/BaseType"
      properties:
        additionalField:
          type: string

--- # Test 3: Should NOT warn on multiple-entry allOf
openapi: 3.0.0
info:
  title: Test API
x-tools-validator:
  id: no-singular-allof-3
  spectral:
    should-miss:
      - no-singular-allof
  zgw-cleaner:
    should-clean-to: no-singular-allof-3
components:
  schemas:
    Test:
      allOf:
        - $ref: "#/components/schemas/BaseType"
        - $ref: "#/components/schemas/OtherType"

--- # Test 4: Should NOT warn when single-entry allOf has type sibling
openapi: 3.0.0
info:
  title: Test API
x-tools-validator:
  id: no-singular-allof-4
  spectral:
    should-miss:
      - no-singular-allof
  zgw-cleaner:
    should-clean-to: no-singular-allof-4
components:
  schemas:
    Test:
      allOf:
        - $ref: "#/components/schemas/BaseType"
      type: object
