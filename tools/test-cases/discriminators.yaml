--- # Test 1
openapi: 3.0.4
info:
  title: Test API
x-tools-validator:
  id: discriminator-test-1
  spectral:
    should-hit:
      - discriminator-mapping-required
    should-miss:
      - discriminator-property-exists
components:
  schemas:
    ObjectBase:
      type: object
      properties:
        objectType:
          type: string
      discriminator:
        propertyName: objectType
    Object1:
      type: object
    Object2:
      type: object
--- # Test 2
openapi: 3.0.4
info:
  title: Test API
x-tools-validator:
  id: discriminator-test-2
  spectral:
    should-miss:
      - discriminator-mapping-required
    should-hit:
      - discriminator-property-exists
components:
  schemas:
    ObjectBase:
      type: object
      discriminator:
        propertyName: objectType
        mapping:
          type1: "#/components/schemas/Object1"
          type2: "#/components/schemas/Object2"
    Object1:
      type: object
    Object2:
      type: object
--- # Test 3
openapi: 3.0.4
info:
  title: Test API
x-tools-validator:
  id: discriminator-test-3
  zgw-cleaner:
    should-clean-to: discriminator-test-3-cleaned
    should-hit:
      - discriminator-to-variant
components:
  schemas:
    ObjectBase:
      type: object
      properties:
        objectType:
          type: string
      discriminator:
        propertyName: objectType
        mapping:
          type1: "#/components/schemas/Object1"
          type2: "#/components/schemas/Object2"
    Object1:
      allOf:
        - $ref: "#/components/schemas/ObjectBase"
    Object2:
      allOf:
        - $ref: "#/components/schemas/ObjectBase"
--- # Test 3 cleaned
openapi: 3.0.4
info:
  title: Test API
x-tools-validator:
  id: discriminator-test-3-cleaned
components:
  schemas:
    ObjectVariant:
      oneOf:
        - $ref: "#/components/schemas/Object1"
        - $ref: "#/components/schemas/Object2"
    ObjectBase:
      type: object
      properties:
        objectType:
          type: string
      discriminator:
        propertyName: objectType
        mapping:
          type1: "#/components/schemas/Object1"
          type2: "#/components/schemas/Object2"
      required:
        - objectType
    Object1:
      allOf:
        - $ref: "#/components/schemas/ObjectBase"
      properties:
        objectType:
          enum:
            - type1
    Object2:
      allOf:
        - $ref: "#/components/schemas/ObjectBase"
      properties:
        objectType:
          enum:
            - type2
--- # Test 4
openapi: 3.0.4
info:
  title: Test API
x-tools-validator:
  id: discriminator-test-4
  zgw-cleaner:
    should-clean-to: discriminator-test-3-cleaned
    should-hit:
      - discriminator-to-variant
components:
  schemas:
    ObjectBase:
      type: object
      properties:
        objectType:
          type: enum
          enum:
            - type1
            - type2
      discriminator:
        propertyName: objectType
    Object1:
      type: object
    Object2:
      type: object
